name: Build and Push Devcontainer Image
on:
  push:
    branches:
      - main
permissions:
  contents: read
  packages: write  # Needed to push to ghcr.io
jobs:
  build-amd64:
    if: github.event_name == 'push' && github.repository == 'BeanieZombie/zombiekit-devcontainer'
    runs-on: ubuntu-latest  # Use latest Ubuntu version for GitHub-hosted runners
    timeout-minutes: 60  # Increase timeout to 60 minutes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Debug TARGETPLATFORM
        run: |
          echo "Platforms to build: linux/amd64"
      - name: Scan base image for vulnerabilities (ubuntu:jammy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ubuntu:jammy'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Allow the build to continue despite vulnerabilities
          scanners: 'vuln'  # Use Docker for scanning, avoid containerd/podman
      - name: Clean up existing images
        run: |
          docker rmi ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 || true
          docker rmi ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || true
      - name: Debug Package Accessibility
        run: |
          echo "Verifying package accessibility before push..."
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 || echo "AMD64 image does not exist or is inaccessible (expected if package was deleted)"
      - name: Build and push Docker image (elderberry: true
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/beaniezombie/zombiekit-devcontainer:amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max,key=${{ github.sha }}-amd64
      - name: Verify Images After Push
        run: |
          echo "Verifying AMD64 image after push..."
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 || { echo "AMD64 image not found"; exit 1; }

  build-arm64:
    if: github.event_name == 'push' && github.repository == 'BeanieZombie/zombiekit-devcontainer'
    runs-on: [self-hosted, linux, ARM64]  # Requires a self-hosted ARM64 runner with these labels
    timeout-minutes: 60  # Increase timeout to 60 minutes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Docker Info
        run: |
          docker info || { echo "Docker info failed"; exit 1; }
          docker ps -a || { echo "Docker ps failed"; exit 1; }
          docker images || { echo "Docker images failed"; exit 1; }
          docker buildx version || { echo "Buildx version check failed"; exit 1; }
          docker buildx inspect || { echo "Buildx inspect failed"; exit 1; }
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Debug TARGETPLATFORM
        run: |
          echo "Platforms to build: linux/arm64"
      - name: Scan base image for vulnerabilities (ubuntu:jammy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ubuntu:jammy'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Allow the build to continue despite vulnerabilities
          scanners: 'vuln'  # Use Docker for scanning, avoid containerd/podman
      - name: Clean up existing images
        run: |
          docker rmi ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 || true
          docker rmi ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || true
      - name: Debug Package Accessibility
        run: |
          echo "Verifying package accessibility before push..."
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || echo "ARM64 image does not exist or is inaccessible (expected if package was deleted)"
      - name: Build and push Docker image (ARM64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ghcr.io/beaniezombie/zombiekit-devcontainer:arm64
          labels: |
            org.opencontainers.image.os=linux
            org.opencontainers.image.architecture=arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max,key=${{ github.sha }}-arm64
      - name: Verify Images After Push
        run: |
          echo "Verifying ARM64 image after push..."
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || { echo "ARM64 image not found"; exit 1; }

  combine-images:
    needs: [build-amd64, build-arm64]
    if: github.event_name == 'push' && github.repository == 'BeanieZombie/zombiekit-devcontainer'
    runs-on: ubuntu-latest  # Use latest Ubuntu version for GitHub-hosted runners
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Images with Retry
        run: |
          set -e
          echo "Verifying AMD64 and ARM64 images..."
          for i in {1..3}; do
            docker pull --platform linux/amd64 ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 && break || sleep 10
          done || { echo "Failed to pull AMD64 image after retries"; exit 1; }
          for i in {1..3}; do
            docker pull --platform linux/arm64 ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 && break || { echo "ARM64 image unavailable"; exit 1; }
          done

      - name: Verify Images Exist
        run: |
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 || { echo "AMD64 image missing"; exit 1; }
          docker manifest inspect ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || { echo "ARM64 image missing"; exit 1; }

      - name: Create and Push Manifest
        run: |
          docker manifest create ghcr.io/beaniezombie/zombiekit-devcontainer:latest \
            --amend ghcr.io/beaniezombie/zombiekit-devcontainer:amd64 \
            --amend ghcr.io/beaniezombie/zombiekit-devcontainer:arm64 || { echo "Manifest creation failed."; exit 1; }
          docker manifest push --purge ghcr.io/beaniezombie/zombiekit-devcontainer:latest || { echo "Manifest push failed."; exit 1; }

      - name: Make container public
        run: gh api --method PATCH /user/packages/container/zombiekit-devcontainer/visibility \
          -f visibility=public
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}